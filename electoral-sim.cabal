cabal-version:       3.0
-- Initial package description 'electoral-sim.cabal' generated by 'cabal
-- init'.  For further documentation, see
-- http://haskell.org/cabal/users-guide/

name:                electoral-sim
version:             0.1.1.0
synopsis:            library of methods of apportionment
-- description:
homepage:            https://github.com/dan323/elections-haskell
-- bug-reports:
license:             MIT
license-file:        LICENSE
author:              dan323
maintainer:          danconsa@hotmail.com
-- copyright:
category:            Math
extra-source-files:  CHANGELOG.md, README.md, tex/*

library elect-sys
  -- other-modules:
  -- other-extensions:
  build-depends:       base >=4.12.0.0,
                       containers >=0.6.2,
                       random >=1.1
  hs-source-dirs:      src
  exposed-modules:     Data.Votes
                       Data.Divisor
                       Data.Quota
                       Data.Divisor.Provided
                       Data.Quota.Provided
                       Simulation.Simulation
                       Simulation.Provided
  default-language:    Haskell2010

test-suite test-data
  Type:                exitcode-stdio-1.0
  main-is:             Test/Data/Main.hs
  build-depends:       base >=4.12.0.0,
                       containers >=0.6.2,
                       HUnit >= 1.6.0
  hs-source-dirs:      test, src
  other-modules:       Data.Votes
                       Data.Divisor
                       Data.Quota
                       Data.Divisor.Provided
                       Data.Quota.Provided
  default-language:    Haskell2010

test-suite test-sim
  Type:                exitcode-stdio-1.0
  main-is:             Test/Sim/Main.hs
  build-depends:       base >=4.12.0.0,
                       containers >=0.6.2,
                       random >=1.1,
                       HUnit >= 1.6.0
  hs-source-dirs:      test, src
  other-modules:       Data.Votes
                       Data.Divisor
                       Data.Quota
                       Data.Divisor.Provided
                       Data.Quota.Provided
                       Simulation.Simulation
                       Simulation.Provided
  default-language:    Haskell2010